@model TechXpress_DepiGraduation.Models.Category

@{
    Layout = "_Layout";
    ViewData["Title"] = "Category Details";
}

<style>
    .details-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1rem;
    }

    /* Category Header */
    .category-header {
    position: relative;
    height: 250px;
    background-color: #d3d3d3;
    border-radius: 15px;
    overflow: hidden;
    margin-bottom: 2rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    color: #fff;
    }

    .category-header .content {
    position: relative;
    z-index: 2;
    padding: 1rem;
    }

    .category-header h2 {
    font-size: 2rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
    }

    .category-header p {
    font-size: 1rem;
    color: #f0f0f0;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .category-header img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    filter: brightness(0.7);
    z-index: 1;
    }

    /* Products Section */
    .products-section {
    margin-top: 2rem;
    position: relative;
    }

    .products-section h3 {
    color: #333;
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 1.5rem;
    }

    .products-wrapper {
    position: relative;
    width: 100%;
    overflow: hidden;
    }

    .products-list {
    display: flex;
    gap: 1.5rem;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    scrollbar-width: none; /* Hide default scrollbar */
    }

    .products-list::-webkit-scrollbar {
    display: none; /* Hide scrollbar for Webkit browsers */
    }

    .product-card {
    flex: 0 0 220px;
    background-color: #fff;
    border-radius: 15px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    padding: 1rem;
    text-align: center;
    transition: transform 0.3s ease;
    scroll-snap-align: start;
    }

    .product-card:hover {
    transform: translateY(-5px);
    }

    .product-card a {
    text-decoration: none;
    color: inherit;
    }

    .product-card img {
    max-width: 100%;
    height: 150px;
    object-fit: contain;
    border-radius: 10px;
    margin-bottom: 0.75rem;
    }

    .product-card h4 {
    font-size: 1.1rem;
    color: #333;
    margin-bottom: 0.5rem;
    font-weight: 600;
    }

    .product-card p {
    font-size: 0.9rem;
    color: #666;
    margin-bottom: 0.5rem;
    }

    .product-card .price {
    font-size: 1.1rem;
    font-weight: 600;
     color: #7B61FF; 
    }

    /* Navigation Arrows */
    .nav-arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: rgba(0, 0, 0, 0.5);
    color: #fff;
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    font-size: 1.2rem;
    z-index: 10;
    transition: background-color 0.3s ease;
    }

    .nav-arrow:hover {
    background-color: rgba(0, 0, 0, 0.7);
    }

    .nav-arrow.left {
    left: 10px;
    }

    .nav-arrow.right {
    right: 10px;
    }

    /* Action Buttons */
    .action-buttons {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 2rem;
    }

    .action-buttons .btn {
    padding: 0.75rem 1.5rem;
    border-radius: 25px;
    font-weight: 500;
    transition: all 0.3s ease;
    border: none;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    }

    .action-buttons .btn-back {
    background-color: #6c757d;
    color: #fff;
    }

    .action-buttons .btn-back:hover {
    background-color: #5a6268;
    box-shadow: 0 4px 12px rgba(108, 117, 125, 0.3);
    transform: translateY(-2px);
    }

    .action-buttons .btn-edit {
    background-color: #684DDF; 
    color: #fff;
    }

    .action-buttons .btn-edit:hover {
    background-color: #22277A;
    box-shadow: 0 4px 12px rgba(90, 155, 213, 0.3);
    transform: translateY(-2px);
    }

    .action-buttons .btn-delete {
    background-color: #dc3545;
    color: #fff;
    }

    .action-buttons .btn-delete:hover {
    background-color: #c82333;
    box-shadow: 0 4px 12px rgba(220, 53, 69, 0.3);
    transform: translateY(-2px);
    }

    .action-buttons .btn i {
    transition: transform 0.3s ease;
    }

    .action-buttons .btn:hover i {
    transform: scale(1.1);
    }

    @@media (max-width: 576px) {
    .category-header {
    height: 200px;
    }

    .category-header h2 {
    font-size: 1.5rem;
    }

    .category-header p {
    font-size: 0.9rem;
    }

    .product-card {
    flex: 0 0 180px;
    }

    .action-buttons {
    flex-direction: column;
    gap: 1rem;
    }

    .action-buttons .btn {
    width: 100%;
    justify-content: center;
    }

    .nav-arrow {
    width: 35px;
    height: 35px;
    font-size: 1rem;
    }
    }
</style>

<div class="details-container">
    <!-- Category Header -->
    <div class="category-header">
        @if (!string.IsNullOrEmpty(Model.ImageName))
        {
            <img src="@Url.Content("~/images/categories/" + Model.ImageName)" alt="@Model.Name" class="img-fluid" onerror="this.onerror=null; this.src='/images/fallback-category.png'; console.log('Image failed to load: @Model.ImageName');" />
        }
        else
        {
            <img src="/images/fallback-category.png" alt="Default Category Image" class="img-fluid" />
        }
        <div class="content">
            <h2>@Model.Name</h2>
            <p>@Model.Description</p>
        </div>
    </div>

    <!-- Products Section -->
    <div class="products-section">
        <h3>Products in this Category</h3>
        <div class="products-wrapper">
            <button class="nav-arrow left" onclick="scrollProducts('left')">
                <i class="fas fa-chevron-left"></i>
            </button>
            <div class="products-list" id="products-list">
                @if (Model.Products != null && Model.Products.Any())
                {
                    @foreach (var product in Model.Products)
                    {
                        <div class="product-card">
                            <a asp-controller="Product" asp-action="Details" asp-route-id="@product.Id">
                                @if (product.Image != null && product.Image.Any())
                                {
                                    <img src="@(product.Image[0].StartsWith("http") ? product.Image[0] : "~/images/products/" + product.Image[0])" alt="@product.Name" onerror="this.onerror=null; this.src='/images/fallback-product.png';" />
                                }
                                else
                                {
                                    <img src="/images/fallback-product.png" alt="No Image" />
                                }
                                <h4>@product.Name</h4>
                                <p>@(product.Description?.Length > 50 ? product.Description.Substring(0, 50) + "..." : product.Description)</p>
                                <p class="price">$@product.Price</p>
                            </a>
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted">No products available in this category.</p>
                }
            </div>
            <button class="nav-arrow right" onclick="scrollProducts('right')">
                <i class="fas fa-chevron-right"></i>
            </button>
        </div>
    </div>

    <!-- Action Buttons -->
    <div class="action-buttons">
        <a asp-action="Index" class="btn btn-back">
            <i class="fas fa-arrow-left"></i> Back
        </a>
        <div>
            @if (User.IsInRole("Admin"))
            {
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-edit">
                    <i class="fas fa-pen"></i> Edit
                </a>
                <form asp-action="Delete" method="post" style="display:inline;" onsubmit="return confirm('Are you sure you want to delete this category?');">
                    <input type="hidden" name="id" value="@Model.Id" />
                <button type="submit" class="btn btn-delete">
                    <i class="fas fa-trash"></i> Delete
                </button>
            </form>
            }
        </div>
    </div>
</div>

<script>
    function scrollProducts(direction) {
        const container = document.getElementById('products-list');
        const scrollAmount = 240; // Adjust based on card width + gap
        if (direction === 'left') {
            container.scrollBy({ left: -scrollAmount, behavior: 'smooth' });
        } else {
            container.scrollBy({ left: scrollAmount, behavior: 'smooth' });
        }
    }
</script>