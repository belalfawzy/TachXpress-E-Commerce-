@model List<ShoppingCartItem>
@{
    ViewData["Title"] = "Shopping Cart";
    var total = ViewBag.Total as decimal? ?? 0;
}
@Html.AntiForgeryToken()
<link rel="stylesheet" href="~/css/cart.css" />

<div class="cart-container" style="padding: 2rem; border-radius: 16px;">
    <h2 class="mb-4">
        <i class="fas fa-shopping-cart me-2" style="color: #7B61FF;"></i> Your Cart
    </h2>

    @if (Model.Count == 0)
    {
        <div class="text-center p-5" style="background-color: #ffffff; border: 2px dashed #ddd; border-radius: 16px;">
            <i class="fas fa-shopping-cart fa-4x mb-3 text-muted"></i>
            <h4 class="text-muted mb-2">Oops! Your cart is empty.</h4>
            <p class="mb-4">Browse our products and add some items to your cart.</p>
            <a href="/Product" class="btn" style="background-color: #7B61FF; color: white; padding: 10px 24px; border-radius: 30px;">
                <i class="fas fa-arrow-left me-1"></i> Continue Shopping
            </a>
        </div>
    }
    else
    {
        <div class="cart-grid mb-4" id="cart-items">
            @foreach (var item in Model)
            {
                <div class="cart-item" id="item-@item.Id" style="background-color: white; border-radius: 12px; padding: 1rem; margin-bottom: 1rem; box-shadow: 0 2px 8px rgba(0,0,0,0.05);">
                    <div class="item-info">
                        <h5>@item.Product.Name</h5>
                        <p class="price text-muted"><i class="fas fa-tag me-1"></i> @item.Product.Price.ToString("C")</p>
                        <p class="subtotal text-muted" id="subtotal-@item.Id"><i class="fas fa-money-bill-wave me-1"></i> @String.Format("{0:C}", item.Product.Price * item.Quantity)</p>
                    </div>

                    <div class="item-controls mt-2 d-flex align-items-center gap-2">
                        <button class="qty-btn decrease-btn" data-id="@item.Product.Id" data-itemid="@item.Id" data-price="@item.Product.Price">
                            <i class="fas fa-minus"></i>
                        </button>

                        <span class="qty-display fw-bold" id="qty-@item.Id">@item.Quantity</span>

                        <button class="qty-btn increase-btn" data-id="@item.Product.Id" data-itemid="@item.Id" data-price="@item.Product.Price">
                            <i class="fas fa-plus"></i>
                        </button>

                        <button class="delete-btn btn-danger" onclick="confirmDelete(@item.Id)">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </div>
            }
        </div>

        <div class="cart-summary text-end">
            <h4>Total: <strong id="cart-total">@total.ToString("C")</strong></h4>

            <div class="mt-3 d-flex justify-content-between">
                <a href="/Product" class="btn btn-outline-secondary" style="border-radius: 30px;">
                    <i class="fas fa-arrow-left me-1"></i> Continue Shopping
                </a>

                <form asp-action="CompleteOrder" method="post">
                    <button type="submit" class="btn" style="background-color: #7B61FF; color: white; padding: 10px 30px; border-radius: 30px;">
                        <i class="fas fa-check-circle me-1"></i> Complete Order
                    </button>
                </form>
            </div>
        </div>
    }
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    function updateCartUI(itemId, quantity, price) {
        if (quantity <= 0) {
            $("#item-" + itemId).remove();
        } else {
            $("#qty-" + itemId).text(quantity);
            $("#subtotal-" + itemId).html('<i class="fas fa-money-bill-wave me-1"></i> ' + (quantity * price).toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
        }

        updateTotal();
    }

    function updateTotal() {
        let total = 0;
        $(".cart-item").each(function () {
            let price = parseFloat($(this).find('.increase-btn').data("price"));
            let qty = parseInt($(this).find('.qty-display').text());
            total += price * qty;
        });
        $("#cart-total").text(total.toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
    }

    $(document).ready(function () {
        var token = $('input[name="__RequestVerificationToken"]').val();

        $(".increase-btn, .decrease-btn").click(function () {
            var button = $(this);
            var productId = button.data("id");
            var itemId = button.data("itemid");
            var price = parseFloat(button.data("price"));
            var isIncrease = button.hasClass("increase-btn");
            var url = isIncrease ? "/Order/AddToCart" : "/Order/DecreaseFromCart";

            $.post(url, { id: productId, __RequestVerificationToken: token }, function () {

                var currentQty = parseInt($("#qty-" + itemId).text());
                var newQty = isIncrease ? currentQty + 1 : currentQty - 1;
                updateCartUI(itemId, newQty, price);
                updateCartCount();
            });
        });
    });

    function confirmDelete(id) {
        var token = $('input[name="__RequestVerificationToken"]').val();
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/Order/DeleteItemFromCart',
                    type: 'POST',
                    data: { id: id, __RequestVerificationToken: token },
                    success: function () {
                        $("#item-" + id).remove();
                        updateTotal();
                        Swal.fire("Deleted!", "Your item has been deleted.", "success");
                    },
                    error: function () {
                        Swal.fire("Error!", "An error occurred while deleting the item.", "error");
                    }
                });
            }
        });
    }
</script>