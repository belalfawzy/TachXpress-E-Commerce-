@model Dictionary<int, List<OrderItem>>

@{
    Layout = "_Layout";
    ViewData["Title"] = "Products";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>All Orders</title>
    
    <style>
        body {
            background: linear-gradient(135deg, #f9f3fb 0%, #e8e3f0 100%); /* Gradient purple background */
            font-family: 'Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            color: #2d1b3f; /* Deep purple for text */
            margin: 0;
            padding: 0;
            line-height: 1.6;
        }
        .container {
            max-width: 1100px;
            margin: 0 auto;
            padding: 50px 20px;
        }
        h1 {
            font-size: 2.5rem;
            color: #3b2060; /* Rich purple for headings */
            text-align: center;
            margin-bottom: 50px;
            font-weight: 700;
            letter-spacing: -0.5px;
            animation: fadeIn 0.8s ease-in-out;
        }
        .order-card {
            background: #ffffff;
            border-radius: 16px;
            margin-bottom: 30px;
            box-shadow: 0 6px 20px rgba(162, 119, 166, 0.15); /* Soft purple shadow */
            transition: transform 0.4s ease, box-shadow 0.4s ease;
            border: none;
            overflow: hidden;
        }
        .order-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 14px 30px rgba(162, 119, 166, 0.25); /* Stronger purple shadow on hover */
        }
        .order-header {
            background: #a277a6; /* Given purple */
            color: #fff;
            padding: 18px 30px;
            border-radius: 16px 16px 0 0;
            font-size: 1.3rem;
            font-weight: 600;
            letter-spacing: 0.8px;
            position: relative;
        }
        .order-header::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(to right, #8b5b8f, transparent); /* Gradient accent */
        }
        .order-body {
            padding: 30px;
            background: #fdfbff; /* Slightly off-white for contrast */
        }
        .order-items-table {
            margin-top: 20px;
            width: 100%;
            border-collapse: collapse;
            font-size: 0.95rem;
            border-radius: 8px;
            overflow: hidden;
        }
        .order-items-table th {
            background: #efe8f3; /* Light purple header */
            color: #3b2060;
            font-weight: 600;
            padding: 14px 16px;
            text-align: left;
            border-bottom: 2px solid #d3c1db;
        }
        .order-items-table td {
            padding: 14px 16px;
            border-bottom: 1px solid #e9e2ee;
            vertical-align: middle;
            background: #fff;
        }
        .order-items-table tr:last-child td {
            border-bottom: none;
        }
        .total-price {
            color: #a277a6;
            font-weight: 700;
            font-size: 1.05rem;
        }
        .alert {
            background: #f7eef9;
            color: #3b2060;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            font-size: 1.05rem;
            border: 1px solid #d3c1db;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
            margin-bottom: 30px;
        }
        .text-end {
            text-align: right;
            margin-top: 20px;
            font-size: 1.15rem;
            font-weight: 600;
        }
        .text-muted {
            color: #7a6b8d; /* Muted purple-gray */
            font-style: normal;
            font-size: 0.95rem;
        }
        /* Animations */
       
        .order-card {
            animation: fadeIn 0.6s ease-in-out;
        }
       
       
    </style>
</head>
<body>
<div class="container">
    <div class="row text-center mb-5">
        <div class="col-lg-8 mx-auto">
            <h1>All Orders</h1>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 mx-auto">
            @if (Model == null || !Model.Any())
            {
                <div class="alert" role="alert">
                    No orders found.
                </div>
            }
            else
            {
                <div class="list-group">
                    @foreach (var order in Model)
                    {
                        <div class="list-group-item order-card">
                            <div class="order-header">
                                Order #@(order.Key)
                            </div>
                            <div class="order-body">
                                @if (!order.Value.Any())
                                {
                                    <p class="text-muted">No items in this order.</p>
                                }
                                else
                                {
                                    <table class="order-items-table">
                                        <thead>
                                            <tr>
                                                <th scope="col">Product</th>
                                                <th scope="col">Quantity</th>
                                                <th scope="col">Price</th>
                                                <th scope="col">Total</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in order.Value)
                                            {
                                                <tr>
                                                    <td>@(item.Product?.Name ?? "Unknown Product")</td>
                                                    <td>@item.Amount</td>
                                                    <td>@item.Price.ToString("C")</td>
                                                    <td class="total-price">@((item.Amount * item.Price).ToString("C"))</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                    <div class="text-end">
                                        <strong>Total Order: </strong>
                                        <span class="total-price">
                                            @(order.Value.Sum(oi => oi.Amount * oi.Price).ToString("C"))
                                        </span>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>
</body>
</html>