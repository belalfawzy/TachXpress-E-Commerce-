@model TechXpress_DepiGraduation.Models.Product
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Create Product</title>
</head>
<body>
<div class="container">
    <div class="row">
        <div class="col-md-6 offset-md-3">
            <form asp-action="Create" method="post">
                <div class="mb-3">
                    <label asp-for="Name" class="form-label"></label>
                    <input asp-for="Name" class="form-control"/>
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="Description" class="form-label"></label>
                    <textarea asp-for="Description" class="form-control" rows="4"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="Price" class="form-label"></label>
                    <input asp-for="Price" class="form-control" type="number" step="0.01" min="0"/>
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="Image" class="form-label">Image URL</label>
                    <input asp-for="Image" class="form-control"/>
                    <span asp-validation-for="Image" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label class="form-label">Colors</label>
                    <div id="color-container">
                        <!-- Initial color input -->
                        <div class="input-group mb-2 color-input-group">
                            <input type="color" class="form-control color-input" value="#000000"/>
                            <button type="button" class="btn btn-outline-danger remove-color">×</button>
                        </div>
                    </div>
                    <button type="button" id="add-color" class="btn btn-sm btn-outline-secondary mt-2">Add Another Color</button>
                    <!-- Hidden field to store the final color values -->
                    <input type="hidden" asp-for="color" id="color-values" />
                    <span asp-validation-for="color" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="CategoryId" class="form-label">Category</label>
                    <select asp-for="CategoryId" class="form-control" asp-items="@(new SelectList(ViewBag.Categories ?? new List<Category>(), nameof(Category.Id), nameof(Category.Name)))">                        <option value="">Select a category</option>
                    </select>
                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>
                <div class="mb-3 d-flex justify-content-end">
                    <a asp-action="Index" class="btn btn-secondary me-2">Cancel</a>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts {
<partial name="_ValidationScriptsPartial" />
<script>
    $(document).ready(function() {
        // Add new color input when button is clicked
        $('#add-color').click(function() {
            const container = $('#color-container');
            const newColorGroup = `
                    <div class="input-group mb-2 color-input-group">
                        <input type="color" class="form-control color-input" value="#000000"/>
                        <button type="button" class="btn btn-outline-danger remove-color">×</button>
                    </div>`;
            container.append(newColorGroup);
            updateColorValues();
        });

        // Handle remove button clicks
        $(document).on('click', '.remove-color', function() {
            const group = $(this).closest('.color-input-group');
            group.remove();
            updateColorValues();
        });

        // Update hidden input whenever color inputs change
        $(document).on('input', '.color-input', updateColorValues);

        function updateColorValues() {
            const colors = [];
            $('.color-input').each(function() {
                const color = $(this).val().trim();
                if (color) {
                    colors.push(color);
                }
            });
            $('#color-values').val(colors.join(','));
        }

        // Initialize color values on page load
        updateColorValues();
    });
</script>
}
</body>
</html>