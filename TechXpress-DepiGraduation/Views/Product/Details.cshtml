@model Product
@{
    Layout = "_Layout";
ViewData["Title"] = "Details";

var similarProducts = ViewBag.SimilarProducts as List<Product> ?? new List<Product>();
var quantities = ViewBag.CartQuantities as Dictionary<int, int> ?? new Dictionary<int, int>();
var hasInCart = quantities.ContainsKey(@Model.Id);
var qty = hasInCart ? quantities[@Model.Id] : 0;
}

<div>
    <style>
        body {
            background-color: #f4f6f8;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        .hero {
            background: #7B61FF;
            color: white;
            padding: 2rem 1rem;
            border-radius: 12px;
            margin-bottom: 2.5rem;
            text-align: center;
            position: relative;
            overflow: hidden;
        }
        .hero h1 {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }
        .product-card { 
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.08);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 18px rgba(0,0,0,0.12);
        }
        .carousel-item img {
            width: 100%;
            height: 450px;
            object-fit: cover;
            border-radius: 10px;
            transition: transform 0.3s ease;
        }
        .carousel-item img:hover {
            transform: scale(1.05);
        }
        .color-container {
            max-width: 100%;
            overflow-x: auto;
            white-space: nowrap;
            display: inline-block;
        }
        .thumbnail {
            cursor: pointer;
            opacity: 0.7;
            transition: opacity 0.3s ease;
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 5px;
            margin: 0 5px;
        }
         .thumbnail:hover {
            opacity: 1;
            border: 2px solid #7B61FF;
        }
        .btn-outline-custom {
            padding: 0.75rem 1.75rem;
            font-size: 1rem;
            font-weight: bold;
            background: transparent;
            color: #7B61FF;
            border: 2px solid #7B61FF;
            border-radius: 50px;
            transition: background 0.3s ease, color 0.3s ease;
        }
        .btn-outline-custom:hover {
            background: #E8E4FF;
            color: #6A52D9;
        }
        .color-badge {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 10px;
            border: 1px solid #ddd;
        }
        .fade-in {
            animation: fadeIn 0.5s ease-in;
        }
        
        .similar-product-img {
            height: 200px;
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center;
            border-radius: 10px 10px 0 0;
        }
        
        .product-details {
                                      text-align: center;
                                  }
        .btn-group {
            flex-direction: column;
            gap: 10px;
        }

        .btn.btn-sm.btn-primary {
            width:100%;
            padding: 0.5rem 1.25rem;
            font-size: 0.9rem;
            font-weight: bold;
            background: #7B61FF;
            color: white;
            border: none;
            border-radius: 50px;
            transition: background 0.3s ease, transform 0.3s ease;
        }
        .btn.btn-sm.btn-primary:hover {
            background: #6A52D9;
            transform: translateY(-2px);
        }
        
    </style>
</div>

<div class="container-fluid py-5">
    <div class="hero fade-in">
        <h1><i class="fas fa-box-open me-2"></i>@(Model?.Name ?? "Product Details")</h1>
    </div>

    <!-- Error Message -->
    @if (TempData["ErrorMessage"] != null)
    {
    <div class="alert alert-danger alert-dismissible fade show fade-in" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
    }

    @if (Model != null)
    {
    <!-- Product Card -->
    <div class="row justify-content-center">
        <div class="col-12">
            <div class=" p-4">
                <div class="row g-0">
                    <!-- Image Carousel -->
                    <div class="col-md-6">
                        @if (Model.Image != null && Model.Image.Any())
                        {
                        <div id="productCarousel" class="carousel slide" data-bs-ride="carousel" aria-label="Product image carousel">
                            <!-- Carousel Inner -->
                            <div class="carousel-inner">
                                @for (int i = 0; i < Model.Image.Count; i++)
                                {
                                <div class="carousel-item @(i == 0 ? "active" : "")">
                                    <a href="@Model.Image[i]" data-lightbox="product-images" data-title="@Model.Name">
                                        <img src="@Model.Image[i]" alt="@Model.Name Image @(i + 1)" loading="lazy" style="background-size: contain;" />
                                    </a>
                                </div>
                                }
                            </div>
                            <!-- Carousel Controls -->
                            @if (Model.Image.Count > 1)
                            {
                            <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev" aria-label="Previous image">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next" aria-label="Next image">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                            }
                            <!-- Thumbnails -->
                            @if (Model.Image.Count > 1)
                            {
                            <div class="d-flex justify-content-center mt-3" role="tablist">
                                @for (int i = 0; i < Model.Image.Count; i++)
                                {
                                <img src="@Model.Image[i]" class="thumbnail @(i == 0 ? "active" : "")" data-bs-target="#productCarousel" data-bs-slide-to="@i" alt="Thumbnail @(i + 1)" role="tab" aria-label="Thumbnail @(i + 1)" loading="lazy" />
                                }
                            </div>
                            }
                        </div>
                        }
                        else
                        {
                        <img src="https://via.placeholder.com/400" class="img-fluid" alt="No Image Available" style="height: 450px; object-fit: cover; border-radius: 10px;" loading="lazy" />
                        }
                    </div>

                    <div class="col-md-6 product-details ps-md-4 pt-3 pt-md-0">
                        <h3 class="mb-3">@Model.Name</h3>
                        <p class="text-muted"><strong>Price:</strong> <span class="text-success fs-4">$@Model.Price</span></p>
                        <p><strong>Description:</strong> @Model.Description</p>
                        <p><strong>Category:</strong> @(Model.Category?.Name ?? "N/A")</p>
                        <p><strong>Colors:</strong></p>
                        <div class="color-container">
                            @foreach (var color in @Model.color)
                            {
                            <span class="color-badge" style="background-color: @color;" title="Color: @color" aria-label="Color swatch: @color"></span>
                            }
                        </div>
                        <div class="btn-group mt-4 d-flex gap-2">
                            @if (!User.IsInRole(TechXpress_DepiGraduation.Data.StaticMembers.UserRoles.Admin))
                            {
                                <div id="cart-controls-@Model.Id" class="@(qty > 0 ? "d-none" : "") ">
                                    <button onclick="addToCart(@Model.Id, event); event.stopPropagation();"
                                            class="btn btn-sm btn-primary"
                                            style="background-color:#7B61FF; border-color:#7B61FF;">
                                        <i class="bi bi-cart text-white me-2"></i>Add to Cart
                                    </button>
                                </div>
                                @* <button class="btn btn-custom" onclick="addToCart(@Model.Id,event); event.stopPropagation()"><i class="fas fa-cart-plus me-2"></i>Add to Cart</button> *@
                                <div id="quantity-controls-@Model.Id"
                                     class="d-flex flex-row align-items-center justify-content-center gap-2 mt-1 @(qty > 0 ? "" : "d-none")">
                                    <button class="btn btn-outline-secondary btn-sm" style="padding:0"
                                            onclick="updateCart(@Model.Id, -1); event.stopPropagation();">
                                        <i class="bi bi-dash"></i>
                                    </button>
                                    <span id="qty-@Model.Id" class="fw-bold px-2">@qty</span>
                                    <button class="btn btn-outline-secondary btn-sm" style="padding:0"
                                            onclick="updateCart(@Model.Id, 1); event.stopPropagation();">
                                        <i class="bi bi-plus"></i>
                                    </button>
                                </div>

                            }
                            <a asp-action="Index" class="btn btn-outline-custom"><i class="fas fa-arrow-left me-2"></i>Back to List</a>
                            @if (User.IsInRole(TechXpress_DepiGraduation.Data.StaticMembers.UserRoles.Admin))
                            {
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-custom"><i class="fa fa-edit me-2"></i>Edit</a>
                            <button class="btn btn-outline-custom" onclick="confirmDelete(@Model.Id)"><i class="fas fa-trash me-2"></i>Delete</button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    }

    <!-- Similar Products Section -->
    @if (similarProducts.Any())
    {
    <div class="mt-5">
        <h2 class="text-center mb-4">Similar Products</h2>
        <div class="row g-4">
            @foreach (var product in similarProducts.Take(4)) 
            {
            <div class="col-12 col-sm-6 col-md-4 col-lg-3 d-flex justify-content-center">
            <a asp-action="Details" asp-route-id="@product.Id" class="text-decoration-none text-dark">
            <div class="product-card h-100 d-flex flex-column">
                                    <div class="similar-product-img" style="background-image: url('@(product.Image?.Any() == true ? (product.Image[0].StartsWith("http") ? product.Image[0] : "/images/" + product.Image[0]): "/images/placeholder.jpg")');"></div>
            <div class="p-3 flex-grow-1">
            <h5 class="text-center fw-bold">@product.Name</h5>
            <p class="text-muted text-center" style="font-size: 0.9rem;">
            @(product.Description?.Length > 50 ? product.Description.Substring(0, 50) + "..." : product.Description)
            </p>
            <p class="text-center fw-bold text-success">$@($"{product.Price:0.00}")</p>
            </div>
            </div>
            </a>
            </div>
            }
        </div>
    </div>
    }
</div>

@section Scripts {
<script src="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.4/js/lightbox.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const carousel = document.getElementById('productCarousel');
        if (carousel) {
            carousel.addEventListener('slide.bs.carousel', function (event) {
                const thumbnails = document.querySelectorAll('.thumbnail');
                thumbnails.forEach((thumb, index) => {
                    thumb.classList.toggle('active', index === event.to);
                });
            });

            // Initialize active thumbnail on page load
            const thumbnails = document.querySelectorAll('.thumbnail');
            thumbnails.forEach((thumb, index) => {
                thumb.classList.toggle('active', index === 0);
            });
        }
    });

    function addToCart(productId, event) {
        event.preventDefault();

        fetch(`/Order/AddToCart/${productId}`)
            .then(response => {
                if (response.ok) {
                    updateCartCount();
                    showCartMessage();

                    const cartBtn = document.getElementById(`cart-controls-${productId}`);
                    const qtyControls = document.getElementById(`quantity-controls-${productId}`);
                    const qtySpan = document.getElementById(`qty-${productId}`);

                    if (cartBtn && qtyControls && qtySpan) {
                        cartBtn.classList.add('d-none');
                        qtyControls.classList.remove('d-none');
                        qtySpan.textContent = 1;
                    }
                } else {
                    alert("Something went wrong!");
                }
            })
            .catch(error => {
                console.error("Error:", error);
            });
    }

    function updateCart(productId, change) {
        const qtySpan = document.getElementById(`qty-${productId}`);
        const cartBtn = document.getElementById(`cart-controls-${productId}`);
        const qtyControls = document.getElementById(`quantity-controls-${productId}`);

        if (!qtySpan) return;

        let currentQty = parseInt(qtySpan.textContent);

        if (change === 1) {
            fetch(`/Order/AddToCart/${productId}`)
                .then(() => {
                    qtySpan.textContent = currentQty + 1;
                    updateCartCount();
                });
        } else if (change === -1 && currentQty > 1) {
            fetch(`/Order/DecreaseFromCart/${productId}`)
                .then(() => {
                    qtySpan.textContent = currentQty - 1;
                    updateCartCount();
                });
        } else if (change === -1 && currentQty === 1) {
            fetch(`/Order/DecreaseFromCart/${productId}`)
                .then(() => {
                    if (cartBtn && qtyControls) {
                        cartBtn.classList.remove('d-none');
                        qtyControls.classList.add('d-none');
                        qtySpan.textContent = 0;
                        updateCartCount();
                    }
                });
        }

    }


    function showCartMessage() {
        const messageBox = document.getElementById('cart-message');
        messageBox.classList.remove('d-none');

        setTimeout(() => {
            messageBox.classList.add('d-none');
        }, 2000);
    }

    function confirmDelete(productId) {
        Swal.fire({
            title: 'Are you sure?',
            text: 'Do you want to delete this product? This action cannot be undone.',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#7B61FF',
            cancelButtonColor: '#6c757d',
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = '/Product/Delete/' + productId;
            }
        });
    }
</script>
}
