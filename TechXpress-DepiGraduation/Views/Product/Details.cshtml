@model TechXpress_DepiGraduation.Models.Product
@{
Layout = "_Layout";
ViewData["Title"] = "Product Details";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - @(Model?.Name ?? "Product")</title>
    <style>
        body {
            background-color: #f4f6f8;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        .hero {
            background: linear-gradient(135deg, #a277a6, #cba6f7);
            color: white;
            padding: 2rem 1rem;
            border-radius: 12px;
            margin-bottom: 2.5rem;
            text-align: center;
            position: relative;
            overflow: hidden;
        }
        .hero h1 {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }
        .product-card {
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.08);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 18px rgba(0,0,0,0.12);
        }
        .carousel-item img {
            width: 100%;
            height: 400px;
            object-fit: cover;
            border-radius: 10px;
            transition: transform 0.3s ease;
        }
        .carousel-item img:hover {
            transform: scale(1.05);
        }
        .color-container {
            max-width: 100%;
            overflow-x: auto;
            white-space: nowrap;
            display: inline-block;
        }
        .thumbnail {
            cursor: pointer;
            opacity: 0.7;
            transition: opacity 0.3s ease;
            width: 60px;
            height: 60px;
            object-fit: cover;
            border-radius: 5px;
            margin: 0 5px;
        }
        .thumbnail.active, .thumbnail:hover {
            opacity: 1;
            border: 2px solid #a277a6;
        }
        .btn-custom {
            padding: 0.75rem 1.75rem;
            font-size: 1rem;
            font-weight: bold;
            background: linear-gradient(135deg, #a277a6, #cba6f7);
            color: white;
            border: none;
            border-radius: 50px;
            transition: background 0.3s ease, transform 0.3s ease;
        }
        .btn-custom:hover {
            background: linear-gradient(135deg, #7a428f, #b68adf);
            transform: translateY(-2px);
        }
        .btn-outline-custom {
            padding: 0.75rem 1.75rem;
            font-size: 1rem;
            font-weight: bold;
            background: transparent;
            color: #a277a6;
            border: 2px solid #a277a6;
            border-radius: 50px;
            transition: background 0.3s ease, color 0.3s ease;
        }
        .btn-outline-custom:hover {
            background: #f1e9f7;
            color: #7a428f;
        }
        .color-badge {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 10px;
            border: 1px solid #ddd;
        }
        .fade-in {
            animation: fadeIn 0.5s ease-in;
        }
        @@keyframes fadeIn {
             from { opacity: 0; }
             to { opacity: 1; }
         }
        @@media (max-width: 768px) {
            .hero h1 {
                font-size: 1.8rem;
            }
            .carousel-item img {
                height: 250px;
            }
            .product-card {
                margin: 10px;
            }
            .btn-custom, .btn-outline-custom {
                padding: 0.5rem 1rem;
                font-size: 0.9rem;
            }
        }
        @@media (max-width: 576px) {
            .product-details {
                text-align: center;
            }
            .btn-group {
                flex-direction: column;
                gap: 10px;
            }
        }
    </style>
</head>
<body>
<div class="container py-5">
    <!-- Hero Section -->
    <div class="hero fade-in">
        <h1><i class="fas fa-box-open me-2"></i>@(Model?.Name ?? "Product Details")</h1>
    </div>

    <!-- Error Message -->
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show fade-in" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model != null)
    {
        <!-- Product Card -->
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="product-card fade-in p-4">
                    <div class="row g-0">
                        <!-- Image Carousel -->
                        <div class="col-md-6">
                            @if (Model.Image != null && Model.Image.Any())
                            {
                                <div id="productCarousel" class="carousel slide" data-bs-ride="carousel" aria-label="Product image carousel">
                                    <!-- Carousel Inner -->
                                    <div class="carousel-inner">
                                        @for (int i = 0; i < Model.Image.Count; i++)
                                        {
                                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                                <a href="@Model.Image[i]" data-lightbox="product-images" data-title="@Model.Name">
                                                    <img src="@Model.Image[i]" alt="@Model.Name Image @(i + 1)" loading="lazy" />
                                                </a>
                                            </div>
                                        }
                                    </div>
                                    <!-- Carousel Controls -->
                                    @if (Model.Image.Count > 1)
                                    {
                                        <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev" aria-label="Previous image">
                                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                            <span class="visually-hidden">Previous</span>
                                        </button>
                                        <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next" aria-label="Next image">
                                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                            <span class="visually-hidden">Next</span>
                                        </button>
                                    }
                                    <!-- Thumbnails -->
                                    @if (Model.Image.Count > 1)
                                    {
                                        <div class="d-flex justify-content-center mt-3" role="tablist">
                                            @for (int i = 0; i < Model.Image.Count; i++)
                                            {
                                                <img src="@Model.Image[i]" class="thumbnail @(i == 0 ? "active" : "")" data-bs-target="#productCarousel" data-bs-slide-to="@i" alt="Thumbnail @(i + 1)" role="tab" aria-label="Thumbnail @(i + 1)" loading="lazy" />
                                            }
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <img src="https://via.placeholder.com/400" class="img-fluid" alt="No Image Available" style="height: 400px; object-fit: cover; border-radius: 10px;" loading="lazy" />
                            }
                        </div>

                        <div class="col-md-6 product-details ps-md-4 pt-3 pt-md-0">
                            <h3 class="mb-3">@Model.Name</h3>
                            <p class="text-muted"><strong>Price:</strong> <span class="text-success fs-4">$@Model.Price</span></p>
                            <p><strong>Description:</strong> @Model.Description</p>
                            <p><strong>Category:</strong> @(Model.Category?.Name ?? "N/A")</p>
                            <p><strong>Colors:</strong>
            <div class="color-container">
                                @foreach (var color in @Model.color)
                                {
                                <span class="color-badge" style="background-color: @color;" title="Color: @color" aria-label="Color swatch: @color"></span>
                                }
                            </div>
                            </p>
                                <div class="btn-group mt-4 d-flex gap-2">
                                @if (!User.IsInRole(TechXpress_DepiGraduation.Data.StaticMembers.UserRoles.Admin))
                                {
                                    <button class="btn btn-custom" onclick="addToCart(@Model.Id)"><i class="fas fa-cart-plus me-2"></i>Add to Cart</button>
                                }
                                <a asp-action="Index" class="btn btn-outline-custom"><i class="fas fa-arrow-left me-2"></i>Back to List</a>
                                @if (User.IsInRole(TechXpress_DepiGraduation.Data.StaticMembers.UserRoles.Admin))
                                {
                                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-custom"><i class="fa fa-edit me-2"></i>Edit</a>
                                    <button class="btn btn-outline-custom" onclick="confirmDelete(@Model.Id)"><i class="fas fa-trash me-2"></i>Delete</button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
</body> 

    @section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.4/js/lightbox.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // Update thumbnail active state on carousel slide
        document.getElementById('productCarousel')?.addEventListener('slide.bs.carousel', function (event) {
            document.querySelectorAll('.thumbnail').forEach((thumb, index) => {
                thumb.classList.toggle('active', index === event.to);
            });
        });

        // Add to Cart functionality (placeholder)
        function addToCart(productId) {
            fetch('/ShoppingCart/AddToCart', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ productId: productId, quantity: 1 })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Product added to cart!');
                    } else {
                        alert('Failed to add product to cart: ' + (data.message || 'Unknown error'));
                    }
                })
                .catch(error => {
                    console.error('Error adding to cart:', error);
                    alert('An error occurred while adding to cart.');
                });
        }

        // SweetAlert confirmation for delete
        function confirmDelete(productId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to delete this product? This action cannot be undone.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#a277a6',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/Product/Delete/' + productId;
                }
            });
        }
    </script>
}