@model Product
@{
Layout = "_Layout";
ViewData["Title"] = "Edit Product";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - @Model.Name</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        .form-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.08);
        }
        .image-preview img {
            max-width: 100px;
            max-height: 100px;
            object-fit: cover;
            margin: 5px;
            border-radius: 5px;
        }
        .color-badge {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 10px;
            border: 1px solid #ddd;
        }
        .dynamic-field {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 10px;
        }
        .btn-custom {
            background: linear-gradient(135deg, #a277a6, #cba6f7);
            color: white;
            border: none;
            border-radius: 50px;
            padding: 8px 16px;
        }
        .btn-custom:hover {
            background: linear-gradient(135deg, #7a428f, #b68adf);
        }
        .btn-outline-custom {
            border: 2px solid #a277a6;
            color: #a277a6;
            border-radius: 50px;
            padding: 8px 16px;
        }
        .btn-outline-custom:hover {
            background: #f1e9f7;
            color: #7a428f;
        }
        .error-message {
            color: #dc3545;
            font-size: 0.875rem;
        }
    </style>
</head>
<body>
<div class="container py-5">
    <div class="form-container">
        <h2 class="mb-4">Edit Product: @Model.Name</h2>
        <form asp-action="Edit" method="post" enctype="multipart/form-data">
            <input type="hidden" asp-for="Id" />

            <!-- Name -->
            <div class="mb-3">
                <label asp-for="Name" class="form-label">Name</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="error-message"></span>
            </div>

            <!-- Description -->
            <div class="mb-3">
                <label asp-for="Description" class="form-label">Description</label>
                <textarea asp-for="Description" class="form-control" rows="4"></textarea>
                <span asp-validation-for="Description" class="error-message"></span>
            </div>

            <!-- Price -->
            <div class="mb-3">
                <label asp-for="Price" class="form-label">Price</label>
                <input asp-for="Price" class="form-control" type="number" step="0.01" />
                <span asp-validation-for="Price" class="error-message"></span>
            </div>

            <!-- Category -->
            <div class="mb-3">
                <label asp-for="CategoryId" class="form-label">Category</label>
                <input asp-for="CategoryId" class="form-control" type="number" />
                <span asp-validation-for="CategoryId" class="error-message"></span>
            </div>

            <!-- Images -->
            <div class="mb-3">
                <label class="form-label">Images</label>
                <div id="image-list" class="image-preview">
                    @if (Model.Image != null && Model.Image.Any())
                    {
                        for (int i = 0; i < Model.Image.Count; i++)
                        {
                            <div class="dynamic-field" data-index="@i">
                                <img src="@Model.Image[i]" alt="Image @i" />
                                <input type="hidden" name="Image[@i]" value="@Model.Image[i]" />
                                <button type="button" class="btn btn-outline-custom btn-remove-image">Remove</button>
                            </div>
                        }
                    }
                </div>
                <div class="mb-2">
                    <input type="file" class="form-control" id="newImage" accept="image/*" />
                    <button type="button" class="btn btn-custom mt-2" id="add-image">Add Image</button>
                </div>
            </div>

            <!-- Colors -->
            <div class="mb-3">
                <label class="form-label">Colors</label>
                <div id="color-list">
                 
                    @for (int i = 0; i < @Model.color.Count; i++)
                    {
                        <div class="dynamic-field" data-index="@i">
                            <span class="color-badge" style="background-color: @Model.color[i];"></span>
                            <input type="text" name="Colors[@i]" class="form-control" value="@Model.color[i]" placeholder="e.g., red or #FF0000" />
                            <button type="button" class="btn btn-outline-custom btn-remove-color">Remove</button>
                        </div>
                    }
                </div>
                <div class="mb-2">
                    <input type="text" class="form-control" id="newColor" placeholder="e.g., red or #FF0000" />
                    <button type="button" class="btn btn-custom mt-2" id="add-color">Add Color</button>
                </div>
            </div>

            <!-- Form Buttons -->
            <div class="mb-3 d-flex gap-2">
                <a asp-action="Index" class="btn btn-outline-custom">Cancel</a>
                <button type="submit" class="btn btn-custom">Save</button>
            </div>
        </form>
    </div>
</div>
</body>

@section Scripts {
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script asp-src-include="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script asp-src-include="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<script>
    $(document).ready(function () {
        let imageIndex = @((Model.Image?.Count ?? 0));
        let colorIndex = @(Model.color.Count);

        // Add Image
        $('#add-image').click(function () {
            const fileInput = $('#newImage');
            const file = fileInput[0].files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const imageUrl = e.target.result; // Preview only; actual file is sent via form
                    const html = `
                            <div class="dynamic-field" data-index="${imageIndex}">
                                <img src="${imageUrl}" alt="New Image" />
                                <input type="hidden" name="NewImages[${imageIndex}]" value="new-image-${imageIndex}" />
                                <button type="button" class="btn btn-outline-custom btn-remove-image">Remove</button>
                            </div>`;
                    $('#image-list').append(html);
                    imageIndex++;
                    fileInput.val(''); // Clear file input
                };
                reader.readAsDataURL(file);
            } else {
                alert('Please select an image file.');
            }
        });

        // Remove Image
        $(document).on('click', '.btn-remove-image', function () {
            $(this).closest('.dynamic-field').remove();
        });

        // Add Color
        $('#add-color').click(function () {
            const color = $('#newColor').val().trim();
            if (color && /^(#[0-9A-Fa-f]{3,6}|[a-zA-Z]+)$/.test(color)) {
                const html = `
                        <div class="dynamic-field" data-index="${colorIndex}">
                            <span class="color-badge" style="background-color: ${color};"></span>
                            <input type="text" name="Colors[${colorIndex}]" class="form-control" value="${color}" />
                            <button type="button" class="btn btn-outline-custom btn-remove-color">Remove</button>
                        </div>`;
                $('#color-list').append(html);
                colorIndex++;
                $('#newColor').val('');
            } else {
                alert('Please enter a valid color (e.g., red or #FF0000).');
            }
        });

        // Remove Color
        $(document).on('click', '.btn-remove-color', function () {
            $(this).closest('.dynamic-field').remove();
        });

        // Form Submission
        $('form').submit(function () {
            // Ensure at least one image and color are provided
            if ($('#image-list .dynamic-field').length === 0) {
                alert('Please add at least one image.');
                return false;
            }
            if ($('#color-list .dynamic-field').length === 0) {
                alert('Please add at least one color.');
                return false;
            }
            // Convert Colors to comma-separated string
            const colors = $('#color-list input').map(function () {
                return $(this).val().trim();
            }).get().filter(c => c);
            $('<input>').attr({
                type: 'hidden',
                name: 'color',
                value: colors.join(',')
            }).appendTo('form');
        });
    });
    </script>â€™.
}