@model IEnumerable<TechXpress_DepiGraduation.Models.Product>

@{
Layout = "_Layout";
ViewData["Title"] = "Products";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TechXpress - Products</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        body {
            background: linear-gradient(135deg, #f9f3fb 0%, #e8e3f0 100%);
            font-family: 'Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            color: #2d1b3f;
            margin: 0;
            padding: 0;
            line-height: 1.6;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 50px 20px;
        }
        h1 {
            font-size: 2.5rem;
            color: #3b2060;
            text-align: center;
            margin-bottom: 50px;
            font-weight: 700;
            letter-spacing: -0.5px;
            animation: fadeIn 0.8s ease-in-out;
        }
        .product-card {
            background: #ffffff;
            border-radius: 16px;
            box-shadow: 0 6px 20px rgba(162, 119, 166, 0.15);
            transition: transform 0.4s ease, box-shadow 0.4s ease;
            border: none;
            overflow: hidden;
            animation: fadeIn 0.6s ease-in-out;
            cursor: pointer; /* Indicate card is clickable */
        }
        .product-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 14px 30px rgba(162, 119, 166, 0.25);
        }
        .product-image {
            width: 100%;
            height: 200px; /* Fixed height */
            object-fit: cover;
            border-radius: 16px 16px 0 0;
        }
        .product-body {
            padding: 20px;
            background: #fdfbff;
        }
        .product-title {
            font-size: 1.3rem;
            color: #3b2060;
            font-weight: 600;
            margin-bottom: 10px;
        }
        .product-description {
            font-size: 0.95rem;
            color: #7a6b8d;
            margin-bottom: 15px;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }
        .product-price {
            color: #a277a6;
            font-weight: 700;
            font-size: 1.2rem;
            margin-bottom: 15px;
        }
        .btn {
            padding: 10px 20px;
            border-radius: 8px;
            font-weight: 600;
            font-size: 0.95rem;
            transition: background 0.3s ease, transform 0.2s ease;
            margin-right: 8px;
            margin-bottom: 8px;
        }
        .btn-primary {
            background: #a277a6;
            color: #fff;
            border: none;
        }
        .btn-primary:hover {
            background: #8b5b8f;
            transform: translateY(-2px);
        }
        .btn-danger {
            background: #d33;
            color: #fff;
            border: none;
        }
        .btn-danger:hover {
            background: #b32d2d;
            transform: translateY(-2px);
        }
        .btn-edit {
            background: #3085d6;
            color: #fff;
            border: none;
        }
        .btn-edit:hover {
            background: #2874b5;
            transform: translateY(-2px);
        }
        .add-new-btn {
            position: fixed;
            bottom: 30px;
            right: 30px;
            background: #a277a6;
            color: #fff;
            border: none;
            padding: 15px;
            border-radius: 50%;
            box-shadow: 0 6px 15px rgba(162, 119, 166, 0.3);
            transition: transform 0.3s ease;
        }
        .add-new-btn:hover {
            background: #8b5b8f;
            transform: scale(1.1);
        }
        .text-muted {
            color: #7a6b8d;
            font-size: 0.95rem;
        }
        .alert {
            background: #f7eef9;
            color: #3b2060;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            font-size: 1.05rem;
            border: 1px solid #d3c1db;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
            margin-bottom: 30px;
        }
        /* Animations */
     
    </style>
</head>
<body>
<div class="container">
    <div class="row text-center mb-5">
        <div class="col-lg-8 mx-auto">
            <h1>Our Products</h1>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            @if (Model == null || !Model.Any())
            {
            <div class="alert" role="alert">
                No products found.
            </div>
            }
            else
            {
            <div class="row row-cols-1 row-cols-md-3 row-cols-lg-4 g-4">
                @foreach (var p in Model)
                {
                <div class="col">
                    <div class="product-card" onclick="window.location.href='@Url.Action("Details", "Product", new { id = p.Id })'">
                        <img class="product-image" src="@Url.Content("~/images/" + p.Image[0])" alt="@p.Name image" />
                        <div class="product-body">
                            <h5 class="product-title">@p.Name</h5>
                            <p class="product-description">@(string.Join(" ", p.Description.Split(' ').Take(10)))...</p>
                            <p class="product-price">@p.Price.ToString("C")</p>
                            <div class="action-buttons">
                                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                                {
                                <a asp-controller="Product" asp-action="Edit" class="btn btn-edit" asp-route-id="@p.Id" onclick="event.stopPropagation();">
                                    <i class="fas fa-pencil-alt me-1"></i> Edit
                                </a>
                                <button type="button" class="btn btn-danger" onclick="confirmDelete(@p.Id); event.stopPropagation();" >
                                    <i class="fas fa-trash-alt me-1"></i> Delete
                                </button>
                                }
                                else if (User.Identity.IsAuthenticated)
                                {
                                <button type="button" class="btn btn-primary" onclick="addToCart(@p.Id); event.stopPropagation();">
                                    <i class="fas fa-cart-plus me-1"></i> Add to Cart
                                </button>
                                }
                                else
                                {
                                <a asp-area="Identity" asp-page="/Account/Login" class="btn btn-primary" onclick="event.stopPropagation();">
                                    <i class="fas fa-sign-in-alt me-1"></i> Login to Add to Cart
                                </a>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                }
            </div>
            }
        </div>
    </div>
    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
    {
    <a asp-controller="Product" asp-action="Create" class="add-new-btn" title="Add New Product">
        <i class="fas fa-plus" style="font-size: 1.5rem;"></i>
    </a>
    }
</div>
<script>
    function confirmDelete(id) {
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/Product/Delete',
                    type: 'POST',
                    data: { id: id, __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() },
                    success: function (response) {
                        Swal.fire({
                            title: "Deleted!",
                            text: "Your product has been deleted.",
                            icon: "success"
                        }).then(() => {
                            window.location.reload();
                        });
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            title: "Error!",
                            text: "An error occurred while deleting the product.",
                            icon: "error"
                        });
                    }
                });
            }
        });
    }

    function addToCart(id) {
        $.ajax({
            url: '/Order/AddToCart/' + id,
            type: 'POST',
            data: { productId: id, __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() },
            success: function (response) {
                Swal.fire({
                    title: "Success!",
                    text: "Product added to cart.",
                    icon: "success"
                }).then(() => {
                    window.location.href = '/Order/Index'; // Redirect to specified URL
                });
            },
            error: function (xhr, status, error) {
                Swal.fire({
                    title: "Error!",
                    text: "An error occurred while adding to cart.",
                    icon: "error"
                });
            }
        });
    }
</script>
</body>
</html>
```